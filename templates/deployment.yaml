apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "windforlife.fullname" . }}
  labels:
    {{- include "windforlife.labels" . | nindent 4 }}
spec:
  {{- if not .Values.app.autoscaling.enabled }}
  replicas: {{ .Values.app.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "windforlife.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.app.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "windforlife.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.app.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "windforlife.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.app.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-postgresql
          image: busybox:1.35
          command:
            - "sh"
            - "-c"             
            - >
              until nc -z -v -w30 {{ if .Values.postgresql.enabled }}{{ .Release.Name }}-postgresql{{ else }}"{{ .Values.managedPostgresql.host }}"{{ end }} 5432;
              do echo 'Waiting for PostgreSQL...'; sleep 5; done;
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.app.securityContext | nindent 12 }}
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 15
            periodSeconds: 5
            failureThreshold: 3
          resources:
            {{- toYaml .Values.app.resources | nindent 12 }}
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-redis-app
                  key: redis-password
            - name: POSTGRESQL_DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-postgresql-app
                  key: postgresql-db-name
            - name: POSTGRESQL_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-postgresql-app
                  key: postgresql-username
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-postgresql-app
                  key: postgresql-password
            - name: POSTGRESQL_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-postgresql-app
                  key: postgresql-host
            - name: POSTGRESQL_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-postgresql-app
                  key: postgresql-port
      {{- with .Values.app.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.app.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.app.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
